"use client";
import { useState, useEffect } from 'react';
import { useProfile } from '../profile/ProfileContext';
import { scheduleData, lessonTimes } from '../data';
import './classComponent.css';

export default function ClassComponent({ selectedDayIndex = new Date().getDay() }) {
	const { profile } = useProfile();

	// –ó–∞—â–∏—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	const faculty = profile?.faculty || '–ò–°–ü';
	const course = profile?.course || 1;
	const group = profile?.group || '101';

	const [currentTime, setCurrentTime] = useState(new Date());
	const [activeLessonId, setActiveLessonId] = useState(null);
	const [isToday, setIsToday] = useState(false);

	const daysMap = {
		0: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
		1: '–í—Ç–æ—Ä–Ω–∏–∫',
		2: '–°—Ä–µ–¥–∞',
		3: '–ß–µ—Ç–≤–µ—Ä–≥',
		4: '–ü—è—Ç–Ω–∏—Ü–∞',
		5: '–°—É–±–±–æ—Ç–∞',
		6: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
	};

	useEffect(() => {
		const todayIndex = new Date().getDay() - 1;
		const todayIndexAdjusted = todayIndex === -1 ? 6 : todayIndex;
		setIsToday(selectedDayIndex === todayIndexAdjusted);

		const now = new Date();
		setCurrentTime(now);
		checkActiveLesson(now);

		const timer = setInterval(() => {
			const now = new Date();
			setCurrentTime(now);
			checkActiveLesson(now);
		}, 60000);

		return () => clearInterval(timer);
	}, [selectedDayIndex]);

	const checkActiveLesson = (now) => {
		const hours = now.getHours().toString().padStart(2, '0');
		const minutes = now.getMinutes().toString().padStart(2, '0');
		const currentTimeStr = `${hours}:${minutes}`;

		const activeTimeSlot = lessonTimes.find(lesson => {
			return currentTimeStr >= lesson.start && currentTimeStr < lesson.end;
		});

		setActiveLessonId(activeTimeSlot ? activeTimeSlot.id : null);
	};

	const getFacultySchedule = () => {
		try {
			// –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è
			return scheduleData?.[faculty]?.[course]?.[group] || [];
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:', error);
			return [];
		}
	};

	const selectedDayName = daysMap[selectedDayIndex] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–µ–Ω—å';
	const facultySchedule = getFacultySchedule();
	const daySchedule = facultySchedule?.find(day => day.weekDay === selectedDayName);

	// –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –≤—ã—Ö–æ–¥–Ω–æ–π (—Å—É–±–±–æ—Ç–∞ –∏–ª–∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
	if (selectedDayIndex >= 5) {
		return (
			<div className="classes">
				<div className="weekend-message">
					<div className="weekend-icon">üéâ</div>
					<div>–°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π</div>
					<div className="weekend-sub">–ú–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å</div>
				</div>
			</div>
		);
	}

	// –ï—Å–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
	if (!facultySchedule.length) {
		return (
			<div className="classes">
				<div className="no-schedule-message">
					<div className="error-icon">‚ö†Ô∏è</div>
					<div>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
					<div className="schedule-details">{faculty} {course} {group !== '-' ? group : '–∫—É—Ä—Å'}</div>
				</div>
			</div>
		);
	}

	// –ï—Å–ª–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å –Ω–µ—Ç –∑–∞–Ω—è—Ç–∏–π
	if (!daySchedule) {
		return (
			<div className="classes">
				<div className="no-classes-message">
					<div className="info-icon">‚ÑπÔ∏è</div>
					<div>–ù–∞ {selectedDayName} –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç</div>
				</div>
			</div>
		);
	}

	// –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–Ω–¥–µ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
	return (
		<div className="classes">
			<div className="schedule-header">
				<h3>{faculty} {course} –∫—É—Ä—Å {group} –≥—Ä—É–ø–ø–∞</h3>
				<div className="current-day">{selectedDayName}</div>
			</div>

			{daySchedule.classes.map((item) => {
				const lessonTime = lessonTimes.find(lt => lt.id === item.id);
				const isActive = isToday && item.id === activeLessonId;

				return (
					<div
						key={item.id}
						className={`class-item ${isActive ? 'active' : ''}`}
					>
						<div className="class-order">{item.id}</div>
						<div className="class-time">
							{lessonTime ? `${lessonTime.start} ${lessonTime.end}` : '--:-- - --:--'}
						</div>
						<div className="class-info">
							<h3 className="class-subject">{item.title}</h3>
							<div className="class-details">
								<span className="class-teacher">{item.teacher}</span>
							</div>
						</div>
						<span className="class-room">{item.classRoom}</span>
					</div>
				);
			})}
		</div>
	);
}